{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","className","TodoInsertBlock","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","type","placeholder","TodoListItemBlock","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","TodoListBlock","TodoList","todos","map","App","setTodos","nextid","useRef","filter","localStorage","JSON","stringify","current","concat","useEffect","localNextId","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67e599f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    max-width:512px;\r\n    margin:50px auto;\r\n    .app-title {\r\n        background:#22b8cf;\r\n        color:hsl(0, 0%, 100%);\r\n        height:4rem;\r\n        font-size:1.5rem;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        // text-align:center;\r\n        // line-height:4rem;\r\n    }\r\n    .content { background:#fff; }\r\n`;\r\n\r\nconst TodoTemplate = ({children}) => {\r\n    return (\r\n        <TodoTemplateBlock>\r\n            <h1 className=\"app-title\">일정관리</h1>\r\n            <div className=\"content\">{children}</div>\r\n        </TodoTemplateBlock>\r\n    );\r\n};\r\n\r\nexport default TodoTemplate;","import React, {useState, useCallback} from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoInsertBlock = styled.div`\r\n.TodoInsert {\r\n    display:flex; background:#495057;\r\n    input { background:none; \r\n        outline:none; \r\n        border:none; \r\n        padding:0.5rem;\r\n        font-size:1.125rem;\r\n        line-height:1.5;\r\n        color:#fff;\r\n        flex:1;\r\n        &::placeholder { color:#dee2e6 }\r\n    }\r\n    button {\r\n        background:#868e96;\r\n        outline:none;\r\n        border:none;\r\n        color:#fff;\r\n        padding:0 1rem;\r\n        font-size:1.5rem;\r\n        display:flex;\r\n        align-items:center;\r\n        cursor:pointer;\r\n        &:hover { background:#adb5bd }\r\n    }\r\n}\r\n`;\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n    const [value, setValue] = useState('')\r\n    const onChange = useCallback((e) => { setValue(e.target.value) }, [])\r\n    const onSubmit = useCallback((e) => { e.preventDefault(); onInsert(value); setValue('') }, [value, onInsert])\r\n   \r\n    return (\r\n        <TodoInsertBlock>\r\n            <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"할 일을 입력하세요\" value={value} onChange={onChange}  />\r\n                <button type=\"submit\">\r\n                    <MdAdd />\r\n                </button>\r\n            </form>\r\n        </TodoInsertBlock>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React from 'react';\r\nimport cn from 'classnames';\r\nimport { MdCheckBoxOutlineBlank, MdRemoveCircleOutline, MdCheckBox} from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoListItemBlock = styled.div`\r\npadding:1rem;\r\ndisplay:flex; \r\nalign-items:center;\r\n& + & { border-top:1px solid #dee2e6 }\r\n&:nth-child(even) {\r\n    background:#f8f9fa;\r\n}\r\n.checkbox {\r\n    cursor:pointer;\r\n    flex:1; \r\n    display:flex;\r\n    align-items:center;\r\n    .text {\r\n        margin-left:0.5rem;\r\n        flex:1; \r\n      &.checked { text-decoration:line-through; color:red }\r\n    }\r\n}\r\n.remove {\r\n    color:#ff6b6b;\r\n    cursor:pointer;\r\n    font-size:1.5rem;\r\n    display:flex;\r\n    align-items:center;\r\n    &:hover {\r\n        color:#ff8787;\r\n    }\r\n}\r\n`;\r\n\r\nconst TodoListItem = ({todo, onRemove, onToggle}) => {\r\n    const {id, text, checked} = todo\r\n    return (\r\n        <TodoListItemBlock>\r\n            <div className={cn('checkbox', {checked})} onClick={()=>onToggle(id)}>\r\n                { checked ? <MdCheckBox className=\"red\" /> : <MdCheckBoxOutlineBlank /> }\r\n                <div className={cn(\"text\", {checked})}>{id}{text}</div>\r\n            </div>\r\n            <div className=\"remove\" onClick={()=>onRemove(id)}>\r\n                <MdRemoveCircleOutline />\r\n            </div>\r\n        </TodoListItemBlock>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoListBlock = styled.div`\r\n    min-height:320px;\r\n    max-height:513px;\r\n    overflow-y:auto;\r\n`;\r\n\r\nconst TodoList = ({todos, onRemove, onToggle}) => {\r\n    return (\r\n        <TodoListBlock>\r\n          {\r\n            todos.map( todo => <TodoListItem key={todo.id} todo={todo} onRemove={onRemove} onToggle={onToggle} />  )\r\n          }\r\n        </TodoListBlock>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState, useCallback, useRef, useEffect } from 'react';\n// import './App.scss';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    // {id:1, text:\"일정관리1\", checked:true},\n    // {id:2, text:\"일정관리2\", checked:false},\n    // {id:3, text:\"일정관리3\", checked:true}\n  ])\n  const nextid = useRef(1)  \n  const onRemove = useCallback((id) => { \n    setTodos(todos.filter( todo => todo.id !== id )) \n    localStorage.todo = JSON.stringify( todos.filter( todo => todo.id !== id ) )\n  }, [todos])\n  const onToggle = useCallback((id) => { \n    setTodos(todos.map( todo => todo.id === id ? { ...todo, checked:!todo.checked } : todo  )) \n    localStorage.todo = JSON.stringify(todos.map( todo => todo.id === id ? { ...todo, checked:!todo.checked } : todo  ))\n  }, [todos])\n  const onInsert = useCallback(\n      (text) => {\n        const todo = {id:nextid.current, text:text, checked:false }\n        nextid.current = nextid.current + 1\n        setTodos( todos.concat(todo) )\n        localStorage.todo = JSON.stringify(todos.concat(todo))\n        localStorage.nextid = JSON.stringify(nextid.current)\n    }, [todos])\n\n  useEffect(\n    ()=>{\n      const todo = localStorage.todo\n      const localNextId = localStorage.nextid\n      if (todo) {\n        setTodos( todos.concat( JSON.parse(todo) ) )\n        nextid.current = JSON.parse(localNextId)\n      }\n    }\n    , [])  \n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}